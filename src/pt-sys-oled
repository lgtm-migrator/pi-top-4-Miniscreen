#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from ptoled import PTOLEDDisplay
from components.MenuManager import MenuManager
from signal import (
    signal,
    SIGINT,
    SIGTERM
)
from logging import (
    basicConfig,
    getLogger,
    DEBUG,
    ERROR
)
from ptcommon.logger import PTLogger
from argparse import ArgumentParser


def configure_logging():
    basicConfig(
        level=DEBUG,
        format='%(asctime)-15s - %(message)s'
    )
    # Ignore PIL debug messages
    getLogger('PIL').setLevel(ERROR)


def configure_interrupt_signals():
    def signal_handler(signal, frame):
        PTLogger.debug("Stopping...")
        app.stop()
        PTLogger.debug("Stopped!")
    signal(SIGINT, signal_handler)
    signal(SIGTERM, signal_handler)


def setup_pt_logging():
    parser = ArgumentParser(description="pi-top OLED sys menu")
    parser.add_argument(
        "--no-journal", help="output to stdout not the journal", action="store_true"
    )
    parser.add_argument(
        "--log-level",
        type=int,
        help="set the logging level from 10 (more verbose) to 50 (less verbose)",
        default=20,
    )
    args = parser.parse_args()

    PTLogger.setup_logging("pt-sys-oled", args.log_level, args.no_journal is False)



def setup():
    configure_logging()
    configure_interrupt_signals()
    setup_pt_logging()
    ptoled = PTOLEDDisplay
    ptoled.reset()


if __name__ == "__main__":
    try:
        setup()
        app = MenuManager()
        app.main_loop()
        app.stop()
    except KeyboardInterrupt:
        pass
